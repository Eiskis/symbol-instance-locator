var strPluginName = "Symbol Instance Locator";

var onRun = function(context) {
	var selection = context.selection;

	if (selection.count() == 1 && (selection[0] instanceof MSSymbolMaster || selection[0] instanceof MSSymbolInstance)) {
		var symbol = selection[0],
			symbolMaster = (symbol instanceof MSSymbolMaster) ? symbol : symbol.symbolMaster(),
			symbolInstances = [];

		var pages = context.document.pages(),
			loop = pages.objectEnumerator(),
			page;

		while (page = loop.nextObject()) {
			var predicate = NSPredicate.predicateWithFormat("className == 'MSSymbolInstance' && symbolMaster == %@",symbolMaster),
				instances = page.children().filteredArrayUsingPredicate(predicate),
				instanceLoop = instances.objectEnumerator(),
				instance;

			while (instance = instanceLoop.nextObject()) {
				symbolInstances.push(instance);
			}
		}

		if (symbolInstances.length > 0) {
			var alertWindow = COSAlertWindow.new();
			alertWindow.setMessageText(strPluginName);

			alertWindow.addTextLabelWithValue(symbolMaster.name() + " has " + symbolInstances.length + " instance(s).");

			alertWindow.addTextLabelWithValue("Select an instance to navigate to it's location.");

			var instanceItemHeight = 24,
				instanceFrameHeight = instanceItemHeight * (symbolInstances.length),
				instanceFrame = NSScrollView.alloc().initWithFrame(NSMakeRect(0,0,300,200)),
				instanceFrameSize = instanceFrame.contentSize(),
				instanceFrameInner = NSView.alloc().initWithFrame(NSMakeRect(0,0,instanceFrameSize.width,instanceFrameHeight)),
				count = 0;

			instanceFrame.setHasVerticalScroller(true);
			instanceFrameInner.setFlipped(true);
			instanceFrame.setDocumentView(instanceFrameInner);

			for (var i = 0; i < symbolInstances.length; i++) {
				instanceFrameInner.addSubview(createbutton(context,symbolInstances[i],NSMakeRect(0,instanceItemHeight*count,284,instanceItemHeight)));
				count++;
			}

			instanceFrameInner.scrollPoint(NSMakePoint(0,0));

			alertWindow.addAccessoryView(instanceFrame);

			alertWindow.addButtonWithTitle("Close");

			alertWindow.runModal();
		} else {
			displayDialog(symbolMaster.name() + " has no instances.",strPluginName);
		}
	} else {
		displayDialog("Select one symbol master or instance.",strPluginName);
	}
}

function getInstancePath(layer,path) {
	var parentPath = (!path) ? layer.name() : path,
		parentGroup = layer.parentGroup(),
		separator = "/";

	if (parentGroup) {
		parentPath = parentGroup.name() + separator + parentPath;

		if (parentGroup.parentGroup()) {
			parentPath = getInstancePath(parentGroup,parentPath);
		}
	}

	return parentPath;
}

function displayDialog(message,title) {
	NSApplication.sharedApplication().displayDialog_withTitle(message,title);
}

function createbutton(context,instance,frame) {
	var button = NSButton.alloc().initWithFrame(frame);
	button.setTitle(getInstancePath(instance));
	button.setAlignment(NSLeftTextAlignment);
	button.setBordered(0);
	button.setAction("callAction:");
	button.setCOSJSTargetFunction(function(sender) {
		NSApp.stopModalWithCode(NSOKButton);

		var rect = (instance.parentArtboard()) ? instance.parentArtboard().rect() : instance.absoluteRect().rect();

		context.document.setCurrentPage(instance.parentPage());
		context.document.currentView().zoomToFitRect(rect);

		instance.select_byExpandingSelection(true,false);
	});

	// var exportRequest = MSExportRequest.exportRequestsFromExportableLayer_inRect_useIDForName_(
	// 	instance,
	// 	instance.absoluteInfluenceRect(),
	// 	false
	// 	).firstObject();
	//
	// exportRequest.format = "png";
	//
	// var scaleX = 150 / exportRequest.rect().size.width;
	// var scaleY = 40 / exportRequest.rect().size.height;
	//
	// exportRequest.scale = (scaleX < scaleY) ? scaleX : scaleY;
	//
	// var colorSpace = NSColorSpace.sRGBColorSpace(),
	// 	exporter = MSExporter.exporterForRequest_colorSpace_(exportRequest,colorSpace),
	// 	imageRep = exporter.bitmapImageRep(),
	// 	instanceImage = NSImage.alloc().init().autorelease();
	//
	// instanceImage.addRepresentation(imageRep);
	//
	// button.setImage(instanceImage);
	// button.setImagePosition(NSImageRight);

	return button;
}
